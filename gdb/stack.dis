
stack:     file format elf64-x86-64

SYMBOL TABLE:
0000000000400238 l    d  .interp	0000000000000000              .interp
0000000000400254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000400274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000400298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000004002b8 l    d  .dynsym	0000000000000000              .dynsym
0000000000400348 l    d  .dynstr	0000000000000000              .dynstr
00000000004003aa l    d  .gnu.version	0000000000000000              .gnu.version
00000000004003b8 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
00000000004003e8 l    d  .rela.dyn	0000000000000000              .rela.dyn
0000000000400400 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000400478 l    d  .init	0000000000000000              .init
00000000004004a0 l    d  .plt	0000000000000000              .plt
0000000000400500 l    d  .text	0000000000000000              .text
00000000004006e4 l    d  .fini	0000000000000000              .fini
00000000004006f0 l    d  .rodata	0000000000000000              .rodata
0000000000400734 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000400778 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000600e10 l    d  .init_array	0000000000000000              .init_array
0000000000600e18 l    d  .fini_array	0000000000000000              .fini_array
0000000000600e20 l    d  .jcr	0000000000000000              .jcr
0000000000600e28 l    d  .dynamic	0000000000000000              .dynamic
0000000000600ff8 l    d  .got	0000000000000000              .got
0000000000601000 l    d  .got.plt	0000000000000000              .got.plt
0000000000601040 l    d  .data	0000000000000000              .data
0000000000601050 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000600e20 l     O .jcr	0000000000000000              __JCR_LIST__
0000000000400530 l     F .text	0000000000000000              deregister_tm_clones
0000000000400560 l     F .text	0000000000000000              register_tm_clones
00000000004005a0 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000601050 l     O .bss	0000000000000001              completed.6973
0000000000600e18 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
00000000004005c0 l     F .text	0000000000000000              frame_dummy
0000000000600e10 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              program-with-buffer-overflow.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000004008a8 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000600e20 l     O .jcr	0000000000000000              __JCR_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000600e18 l       .init_array	0000000000000000              __init_array_end
0000000000600e28 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000600e10 l       .init_array	0000000000000000              __init_array_start
0000000000601000 l     O .got.plt	0000000000000000              _GLOBAL_OFFSET_TABLE_
00000000004006e0 g     F .text	0000000000000002              __libc_csu_fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000601040  w      .data	0000000000000000              data_start
0000000000000000       F *UND*	0000000000000000              strcpy@@GLIBC_2.2.5
0000000000601050 g       .data	0000000000000000              _edata
00000000004005ed g     F .text	0000000000000044              bar
00000000004006e4 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              __stack_chk_fail@@GLIBC_2.4
0000000000000000       F *UND*	0000000000000000              printf@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000601040 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000601048 g     O .data	0000000000000000              .hidden __dso_handle
00000000004006f0 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000400670 g     F .text	0000000000000065              __libc_csu_init
0000000000400631 g     F .text	0000000000000015              foo
0000000000601058 g       .bss	0000000000000000              _end
0000000000400500 g     F .text	0000000000000000              _start
0000000000601050 g       .bss	0000000000000000              __bss_start
0000000000400646 g     F .text	000000000000001f              main
0000000000000000  w      *UND*	0000000000000000              _Jv_RegisterClasses
0000000000601050 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000400478 g     F .init	0000000000000000              _init



Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x203>
  400248:	78 38                	js     400282 <_init-0x1f6>
  40024a:	36                   	ss
  40024b:	2d 36 34 2e 73       	sub    $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 02                	add    %al,(%rdx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 06                	add    %al,(%rsi)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 18                	add    %bl,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 fc                	add    %bh,%ah
  400285:	86 f9                	xchg   %bh,%cl
  400287:	3c b4                	cmp    $0xb4,%al
  400289:	f6 ef                	imul   %bh
  40028b:	fa                   	cli    
  40028c:	62 d2 84 3f b4       	(bad)  {%k7}
  400291:	e6 af                	out    %al,$0xaf
  400293:	eb 19                	jmp    4002ae <_init-0x1ca>
  400295:	70 6d                	jo     400304 <_init-0x174>
  400297:	ac                   	lods   %ds:(%rsi),%al

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    %eax,(%rax)
  40029a:	00 00                	add    %al,(%rax)
  40029c:	01 00                	add    %eax,(%rax)
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     (%rax),%eax
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	12 00                	adc    (%rax),%al
	...
  4002e6:	00 00                	add    %al,(%rax)
  4002e8:	12 00                	adc    (%rax),%al
  4002ea:	00 00                	add    %al,(%rax)
  4002ec:	12 00                	adc    (%rax),%al
	...
  4002fe:	00 00                	add    %al,(%rax)
  400300:	23 00                	and    (%rax),%eax
  400302:	00 00                	add    %al,(%rax)
  400304:	12 00                	adc    (%rax),%al
	...
  400316:	00 00                	add    %al,(%rax)
  400318:	2a 00                	sub    (%rax),%al
  40031a:	00 00                	add    %al,(%rax)
  40031c:	12 00                	adc    (%rax),%al
	...
  40032e:	00 00                	add    %al,(%rax)
  400330:	3c 00                	cmp    $0x0,%al
  400332:	00 00                	add    %al,(%rax)
  400334:	20 00                	and    %al,(%rax)
	...

Disassembly of section .dynstr:

0000000000400348 <.dynstr>:
  400348:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40034c:	63 2e                	movslq (%rsi),%ebp
  40034e:	73 6f                	jae    4003bf <_init-0xb9>
  400350:	2e 36 00 73 74       	cs add %dh,%cs:%ss:0x74(%rbx)
  400355:	72 63                	jb     4003ba <_init-0xbe>
  400357:	70 79                	jo     4003d2 <_init-0xa6>
  400359:	00 5f 5f             	add    %bl,0x5f(%rdi)
  40035c:	73 74                	jae    4003d2 <_init-0xa6>
  40035e:	61                   	(bad)  
  40035f:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
  400362:	63 68 6b             	movslq 0x6b(%rax),%ebp
  400365:	5f                   	pop    %rdi
  400366:	66                   	data16
  400367:	61                   	(bad)  
  400368:	69 6c 00 70 72 69 6e 	imul   $0x746e6972,0x70(%rax,%rax,1),%ebp
  40036f:	74 
  400370:	66                   	data16
  400371:	00 5f 5f             	add    %bl,0x5f(%rdi)
  400374:	6c                   	insb   (%dx),%es:(%rdi)
  400375:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  40037c:	72 74                	jb     4003f2 <_init-0x86>
  40037e:	5f                   	pop    %rdi
  40037f:	6d                   	insl   (%dx),%es:(%rdi)
  400380:	61                   	(bad)  
  400381:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%rsi),%ebp
  400388:	6f                   	outsl  %ds:(%rsi),(%dx)
  400389:	6e                   	outsb  %ds:(%rsi),(%dx)
  40038a:	5f                   	pop    %rdi
  40038b:	73 74                	jae    400401 <_init-0x77>
  40038d:	61                   	(bad)  
  40038e:	72 74                	jb     400404 <_init-0x74>
  400390:	5f                   	pop    %rdi
  400391:	5f                   	pop    %rdi
  400392:	00 47 4c             	add    %al,0x4c(%rdi)
  400395:	49                   	rex.WB
  400396:	42                   	rex.X
  400397:	43 5f                	rex.XB pop %r15
  400399:	32 2e                	xor    (%rsi),%ch
  40039b:	34 00                	xor    $0x0,%al
  40039d:	47                   	rex.RXB
  40039e:	4c                   	rex.WR
  40039f:	49                   	rex.WB
  4003a0:	42                   	rex.X
  4003a1:	43 5f                	rex.XB pop %r15
  4003a3:	32 2e                	xor    (%rsi),%ch
  4003a5:	32 2e                	xor    (%rsi),%ch
  4003a7:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

00000000004003aa <.gnu.version>:
  4003aa:	00 00                	add    %al,(%rax)
  4003ac:	02 00                	add    (%rax),%al
  4003ae:	03 00                	add    (%rax),%eax
  4003b0:	02 00                	add    (%rax),%al
  4003b2:	02 00                	add    (%rax),%al
	...

Disassembly of section .gnu.version_r:

00000000004003b8 <.gnu.version_r>:
  4003b8:	01 00                	add    %eax,(%rax)
  4003ba:	02 00                	add    (%rax),%al
  4003bc:	01 00                	add    %eax,(%rax)
  4003be:	00 00                	add    %al,(%rax)
  4003c0:	10 00                	adc    %al,(%rax)
  4003c2:	00 00                	add    %al,(%rax)
  4003c4:	00 00                	add    %al,(%rax)
  4003c6:	00 00                	add    %al,(%rax)
  4003c8:	14 69                	adc    $0x69,%al
  4003ca:	69 0d 00 00 03 00 4b 	imul   $0x4b,0x30000(%rip),%ecx        # 4303d4 <__FRAME_END__+0x2fb2c>
  4003d1:	00 00 00 
  4003d4:	10 00                	adc    %al,(%rax)
  4003d6:	00 00                	add    %al,(%rax)
  4003d8:	75 1a                	jne    4003f4 <_init-0x84>
  4003da:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  4003e0:	55                   	push   %rbp
  4003e1:	00 00                	add    %al,(%rax)
  4003e3:	00 00                	add    %al,(%rax)
  4003e5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000004003e8 <.rela.dyn>:
  4003e8:	f8                   	clc    
  4003e9:	0f 60 00             	punpcklbw (%rax),%mm0
  4003ec:	00 00                	add    %al,(%rax)
  4003ee:	00 00                	add    %al,(%rax)
  4003f0:	06                   	(bad)  
  4003f1:	00 00                	add    %al,(%rax)
  4003f3:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 4003f9 <_init-0x7f>
  4003f9:	00 00                	add    %al,(%rax)
  4003fb:	00 00                	add    %al,(%rax)
  4003fd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.plt:

0000000000400400 <.rela.plt>:
  400400:	18 10                	sbb    %dl,(%rax)
  400402:	60                   	(bad)  
  400403:	00 00                	add    %al,(%rax)
  400405:	00 00                	add    %al,(%rax)
  400407:	00 07                	add    %al,(%rdi)
  400409:	00 00                	add    %al,(%rax)
  40040b:	00 01                	add    %al,(%rcx)
	...
  400415:	00 00                	add    %al,(%rax)
  400417:	00 20                	add    %ah,(%rax)
  400419:	10 60 00             	adc    %ah,0x0(%rax)
  40041c:	00 00                	add    %al,(%rax)
  40041e:	00 00                	add    %al,(%rax)
  400420:	07                   	(bad)  
  400421:	00 00                	add    %al,(%rax)
  400423:	00 02                	add    %al,(%rdx)
	...
  40042d:	00 00                	add    %al,(%rax)
  40042f:	00 28                	add    %ch,(%rax)
  400431:	10 60 00             	adc    %ah,0x0(%rax)
  400434:	00 00                	add    %al,(%rax)
  400436:	00 00                	add    %al,(%rax)
  400438:	07                   	(bad)  
  400439:	00 00                	add    %al,(%rax)
  40043b:	00 03                	add    %al,(%rbx)
	...
  400445:	00 00                	add    %al,(%rax)
  400447:	00 30                	add    %dh,(%rax)
  400449:	10 60 00             	adc    %ah,0x0(%rax)
  40044c:	00 00                	add    %al,(%rax)
  40044e:	00 00                	add    %al,(%rax)
  400450:	07                   	(bad)  
  400451:	00 00                	add    %al,(%rax)
  400453:	00 04 00             	add    %al,(%rax,%rax,1)
	...
  40045e:	00 00                	add    %al,(%rax)
  400460:	38 10                	cmp    %dl,(%rax)
  400462:	60                   	(bad)  
  400463:	00 00                	add    %al,(%rax)
  400465:	00 00                	add    %al,(%rax)
  400467:	00 07                	add    %al,(%rdi)
  400469:	00 00                	add    %al,(%rax)
  40046b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 400471 <_init-0x7>
  400471:	00 00                	add    %al,(%rax)
  400473:	00 00                	add    %al,(%rax)
  400475:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init:

0000000000400478 <_init>:
  400478:	48 83 ec 08          	sub    $0x8,%rsp
  40047c:	48 8b 05 75 0b 20 00 	mov    0x200b75(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  400483:	48 85 c0             	test   %rax,%rax
  400486:	74 05                	je     40048d <_init+0x15>
  400488:	e8 63 00 00 00       	callq  4004f0 <__gmon_start__@plt>
  40048d:	48 83 c4 08          	add    $0x8,%rsp
  400491:	c3                   	retq   

Disassembly of section .plt:

00000000004004a0 <strcpy@plt-0x10>:
  4004a0:	ff 35 62 0b 20 00    	pushq  0x200b62(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004a6:	ff 25 64 0b 20 00    	jmpq   *0x200b64(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004b0 <strcpy@plt>:
  4004b0:	ff 25 62 0b 20 00    	jmpq   *0x200b62(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4004b6:	68 00 00 00 00       	pushq  $0x0
  4004bb:	e9 e0 ff ff ff       	jmpq   4004a0 <_init+0x28>

00000000004004c0 <__stack_chk_fail@plt>:
  4004c0:	ff 25 5a 0b 20 00    	jmpq   *0x200b5a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  4004c6:	68 01 00 00 00       	pushq  $0x1
  4004cb:	e9 d0 ff ff ff       	jmpq   4004a0 <_init+0x28>

00000000004004d0 <printf@plt>:
  4004d0:	ff 25 52 0b 20 00    	jmpq   *0x200b52(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  4004d6:	68 02 00 00 00       	pushq  $0x2
  4004db:	e9 c0 ff ff ff       	jmpq   4004a0 <_init+0x28>

00000000004004e0 <__libc_start_main@plt>:
  4004e0:	ff 25 4a 0b 20 00    	jmpq   *0x200b4a(%rip)        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  4004e6:	68 03 00 00 00       	pushq  $0x3
  4004eb:	e9 b0 ff ff ff       	jmpq   4004a0 <_init+0x28>

00000000004004f0 <__gmon_start__@plt>:
  4004f0:	ff 25 42 0b 20 00    	jmpq   *0x200b42(%rip)        # 601038 <_GLOBAL_OFFSET_TABLE_+0x38>
  4004f6:	68 04 00 00 00       	pushq  $0x4
  4004fb:	e9 a0 ff ff ff       	jmpq   4004a0 <_init+0x28>

Disassembly of section .text:

0000000000400500 <_start>:
  400500:	31 ed                	xor    %ebp,%ebp
  400502:	49 89 d1             	mov    %rdx,%r9
  400505:	5e                   	pop    %rsi
  400506:	48 89 e2             	mov    %rsp,%rdx
  400509:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40050d:	50                   	push   %rax
  40050e:	54                   	push   %rsp
  40050f:	49 c7 c0 e0 06 40 00 	mov    $0x4006e0,%r8
  400516:	48 c7 c1 70 06 40 00 	mov    $0x400670,%rcx
  40051d:	48 c7 c7 46 06 40 00 	mov    $0x400646,%rdi
  400524:	e8 b7 ff ff ff       	callq  4004e0 <__libc_start_main@plt>
  400529:	f4                   	hlt    
  40052a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400530 <deregister_tm_clones>:
  400530:	b8 57 10 60 00       	mov    $0x601057,%eax
  400535:	55                   	push   %rbp
  400536:	48 2d 50 10 60 00    	sub    $0x601050,%rax
  40053c:	48 83 f8 0e          	cmp    $0xe,%rax
  400540:	48 89 e5             	mov    %rsp,%rbp
  400543:	77 02                	ja     400547 <deregister_tm_clones+0x17>
  400545:	5d                   	pop    %rbp
  400546:	c3                   	retq   
  400547:	b8 00 00 00 00       	mov    $0x0,%eax
  40054c:	48 85 c0             	test   %rax,%rax
  40054f:	74 f4                	je     400545 <deregister_tm_clones+0x15>
  400551:	5d                   	pop    %rbp
  400552:	bf 50 10 60 00       	mov    $0x601050,%edi
  400557:	ff e0                	jmpq   *%rax
  400559:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400560 <register_tm_clones>:
  400560:	b8 50 10 60 00       	mov    $0x601050,%eax
  400565:	55                   	push   %rbp
  400566:	48 2d 50 10 60 00    	sub    $0x601050,%rax
  40056c:	48 c1 f8 03          	sar    $0x3,%rax
  400570:	48 89 e5             	mov    %rsp,%rbp
  400573:	48 89 c2             	mov    %rax,%rdx
  400576:	48 c1 ea 3f          	shr    $0x3f,%rdx
  40057a:	48 01 d0             	add    %rdx,%rax
  40057d:	48 d1 f8             	sar    %rax
  400580:	75 02                	jne    400584 <register_tm_clones+0x24>
  400582:	5d                   	pop    %rbp
  400583:	c3                   	retq   
  400584:	ba 00 00 00 00       	mov    $0x0,%edx
  400589:	48 85 d2             	test   %rdx,%rdx
  40058c:	74 f4                	je     400582 <register_tm_clones+0x22>
  40058e:	5d                   	pop    %rbp
  40058f:	48 89 c6             	mov    %rax,%rsi
  400592:	bf 50 10 60 00       	mov    $0x601050,%edi
  400597:	ff e2                	jmpq   *%rdx
  400599:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004005a0 <__do_global_dtors_aux>:
  4005a0:	80 3d a9 0a 20 00 00 	cmpb   $0x0,0x200aa9(%rip)        # 601050 <__TMC_END__>
  4005a7:	75 11                	jne    4005ba <__do_global_dtors_aux+0x1a>
  4005a9:	55                   	push   %rbp
  4005aa:	48 89 e5             	mov    %rsp,%rbp
  4005ad:	e8 7e ff ff ff       	callq  400530 <deregister_tm_clones>
  4005b2:	5d                   	pop    %rbp
  4005b3:	c6 05 96 0a 20 00 01 	movb   $0x1,0x200a96(%rip)        # 601050 <__TMC_END__>
  4005ba:	f3 c3                	repz retq 
  4005bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004005c0 <frame_dummy>:
  4005c0:	48 83 3d 58 08 20 00 	cmpq   $0x0,0x200858(%rip)        # 600e20 <__JCR_END__>
  4005c7:	00 
  4005c8:	74 1e                	je     4005e8 <frame_dummy+0x28>
  4005ca:	b8 00 00 00 00       	mov    $0x0,%eax
  4005cf:	48 85 c0             	test   %rax,%rax
  4005d2:	74 14                	je     4005e8 <frame_dummy+0x28>
  4005d4:	55                   	push   %rbp
  4005d5:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  4005da:	48 89 e5             	mov    %rsp,%rbp
  4005dd:	ff d0                	callq  *%rax
  4005df:	5d                   	pop    %rbp
  4005e0:	e9 7b ff ff ff       	jmpq   400560 <register_tm_clones>
  4005e5:	0f 1f 00             	nopl   (%rax)
  4005e8:	e9 73 ff ff ff       	jmpq   400560 <register_tm_clones>

00000000004005ed <bar>:
  4005ed:	55                   	push   %rbp
  4005ee:	48 89 e5             	mov    %rsp,%rbp
  4005f1:	48 83 ec 20          	sub    $0x20,%rsp
  4005f5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4005f9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  400600:	00 00 
  400602:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400606:	31 c0                	xor    %eax,%eax
  400608:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40060c:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  400610:	48 89 d6             	mov    %rdx,%rsi
  400613:	48 89 c7             	mov    %rax,%rdi
  400616:	e8 95 fe ff ff       	callq  4004b0 <strcpy@plt>
  40061b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40061f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  400626:	00 00 
  400628:	74 05                	je     40062f <bar+0x42>
  40062a:	e8 91 fe ff ff       	callq  4004c0 <__stack_chk_fail@plt>
  40062f:	c9                   	leaveq 
  400630:	c3                   	retq   

0000000000400631 <foo>:
  400631:	55                   	push   %rbp
  400632:	48 89 e5             	mov    %rsp,%rbp
  400635:	bf f8 06 40 00       	mov    $0x4006f8,%edi
  40063a:	b8 00 00 00 00       	mov    $0x0,%eax
  40063f:	e8 8c fe ff ff       	callq  4004d0 <printf@plt>
  400644:	5d                   	pop    %rbp
  400645:	c3                   	retq   

0000000000400646 <main>:
  400646:	55                   	push   %rbp
  400647:	48 89 e5             	mov    %rsp,%rbp
  40064a:	bf 08 07 40 00       	mov    $0x400708,%edi
  40064f:	e8 99 ff ff ff       	callq  4005ed <bar>
  400654:	b8 00 00 00 00       	mov    $0x0,%eax
  400659:	e8 d3 ff ff ff       	callq  400631 <foo>
  40065e:	b8 00 00 00 00       	mov    $0x0,%eax
  400663:	5d                   	pop    %rbp
  400664:	c3                   	retq   
  400665:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40066c:	00 00 00 
  40066f:	90                   	nop

0000000000400670 <__libc_csu_init>:
  400670:	41 57                	push   %r15
  400672:	41 89 ff             	mov    %edi,%r15d
  400675:	41 56                	push   %r14
  400677:	49 89 f6             	mov    %rsi,%r14
  40067a:	41 55                	push   %r13
  40067c:	49 89 d5             	mov    %rdx,%r13
  40067f:	41 54                	push   %r12
  400681:	4c 8d 25 88 07 20 00 	lea    0x200788(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400688:	55                   	push   %rbp
  400689:	48 8d 2d 88 07 20 00 	lea    0x200788(%rip),%rbp        # 600e18 <__init_array_end>
  400690:	53                   	push   %rbx
  400691:	4c 29 e5             	sub    %r12,%rbp
  400694:	31 db                	xor    %ebx,%ebx
  400696:	48 c1 fd 03          	sar    $0x3,%rbp
  40069a:	48 83 ec 08          	sub    $0x8,%rsp
  40069e:	e8 d5 fd ff ff       	callq  400478 <_init>
  4006a3:	48 85 ed             	test   %rbp,%rbp
  4006a6:	74 1e                	je     4006c6 <__libc_csu_init+0x56>
  4006a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4006af:	00 
  4006b0:	4c 89 ea             	mov    %r13,%rdx
  4006b3:	4c 89 f6             	mov    %r14,%rsi
  4006b6:	44 89 ff             	mov    %r15d,%edi
  4006b9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4006bd:	48 83 c3 01          	add    $0x1,%rbx
  4006c1:	48 39 eb             	cmp    %rbp,%rbx
  4006c4:	75 ea                	jne    4006b0 <__libc_csu_init+0x40>
  4006c6:	48 83 c4 08          	add    $0x8,%rsp
  4006ca:	5b                   	pop    %rbx
  4006cb:	5d                   	pop    %rbp
  4006cc:	41 5c                	pop    %r12
  4006ce:	41 5d                	pop    %r13
  4006d0:	41 5e                	pop    %r14
  4006d2:	41 5f                	pop    %r15
  4006d4:	c3                   	retq   
  4006d5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  4006dc:	00 00 00 00 

00000000004006e0 <__libc_csu_fini>:
  4006e0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004006e4 <_fini>:
  4006e4:	48 83 ec 08          	sub    $0x8,%rsp
  4006e8:	48 83 c4 08          	add    $0x8,%rsp
  4006ec:	c3                   	retq   

Disassembly of section .rodata:

00000000004006f0 <_IO_stdin_used>:
  4006f0:	01 00                	add    %eax,(%rax)
  4006f2:	02 00                	add    (%rax),%al
  4006f4:	00 00                	add    %al,(%rax)
  4006f6:	00 00                	add    %al,(%rax)
  4006f8:	48                   	rex.W
  4006f9:	65                   	gs
  4006fa:	6c                   	insb   (%dx),%es:(%rdi)
  4006fb:	6c                   	insb   (%dx),%es:(%rdi)
  4006fc:	6f                   	outsl  %ds:(%rsi),(%dx)
  4006fd:	20 66 72             	and    %ah,0x72(%rsi)
  400700:	6f                   	outsl  %ds:(%rsi),(%dx)
  400701:	6d                   	insl   (%dx),%es:(%rdi)
  400702:	20 66 6f             	and    %ah,0x6f(%rsi)
  400705:	6f                   	outsl  %ds:(%rsi),(%dx)
  400706:	21 00                	and    %eax,(%rax)
  400708:	54                   	push   %rsp
  400709:	68 69 73 20 73       	pushq  $0x73207369
  40070e:	74 72                	je     400782 <_IO_stdin_used+0x92>
  400710:	69 6e 67 20 64 65 66 	imul   $0x66656420,0x67(%rsi),%ebp
  400717:	69 6e 69 74 65 6c 79 	imul   $0x796c6574,0x69(%rsi),%ebp
  40071e:	20 69 73             	and    %ch,0x73(%rcx)
  400721:	20 74 6f 6f          	and    %dh,0x6f(%rdi,%rbp,2)
  400725:	20 6c 6f 6e          	and    %ch,0x6e(%rdi,%rbp,2)
  400729:	67 2c 20             	addr32 sub $0x20,%al
  40072c:	73 6f                	jae    40079d <_IO_stdin_used+0xad>
  40072e:	72 72                	jb     4007a2 <_IO_stdin_used+0xb2>
  400730:	79 21                	jns    400753 <_IO_stdin_used+0x63>
	...

Disassembly of section .eh_frame_hdr:

0000000000400734 <.eh_frame_hdr>:
  400734:	01 1b                	add    %ebx,(%rbx)
  400736:	03 3b                	add    (%rbx),%edi
  400738:	40 00 00             	add    %al,(%rax)
  40073b:	00 07                	add    %al,(%rdi)
  40073d:	00 00                	add    %al,(%rax)
  40073f:	00 6c fd ff          	add    %ch,-0x1(%rbp,%rdi,8)
  400743:	ff 8c 00 00 00 cc fd 	decl   -0x2340000(%rax,%rax,1)
  40074a:	ff                   	(bad)  
  40074b:	ff 5c 00 00          	lcallq *0x0(%rax,%rax,1)
  40074f:	00 b9 fe ff ff b4    	add    %bh,-0x4b000002(%rcx)
  400755:	00 00                	add    %al,(%rax)
  400757:	00 fd                	add    %bh,%ch
  400759:	fe                   	(bad)  
  40075a:	ff                   	(bad)  
  40075b:	ff d4                	callq  *%rsp
  40075d:	00 00                	add    %al,(%rax)
  40075f:	00 12                	add    %dl,(%rdx)
  400761:	ff                   	(bad)  
  400762:	ff                   	(bad)  
  400763:	ff f4                	push   %rsp
  400765:	00 00                	add    %al,(%rax)
  400767:	00 3c ff             	add    %bh,(%rdi,%rdi,8)
  40076a:	ff                   	(bad)  
  40076b:	ff 14 01             	callq  *(%rcx,%rax,1)
  40076e:	00 00                	add    %al,(%rax)
  400770:	ac                   	lods   %ds:(%rsi),%al
  400771:	ff                   	(bad)  
  400772:	ff                   	(bad)  
  400773:	ff 5c 01 00          	lcallq *0x0(%rcx,%rax,1)
	...

Disassembly of section .eh_frame:

0000000000400778 <__FRAME_END__-0x130>:
  400778:	14 00                	adc    $0x0,%al
  40077a:	00 00                	add    %al,(%rax)
  40077c:	00 00                	add    %al,(%rax)
  40077e:	00 00                	add    %al,(%rax)
  400780:	01 7a 52             	add    %edi,0x52(%rdx)
  400783:	00 01                	add    %al,(%rcx)
  400785:	78 10                	js     400797 <_IO_stdin_used+0xa7>
  400787:	01 1b                	add    %ebx,(%rbx)
  400789:	0c 07                	or     $0x7,%al
  40078b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
  400791:	00 00                	add    %al,(%rax)
  400793:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400796:	00 00                	add    %al,(%rax)
  400798:	68 fd ff ff 2a       	pushq  $0x2afffffd
	...
  4007a5:	00 00                	add    %al,(%rax)
  4007a7:	00 14 00             	add    %dl,(%rax,%rax,1)
  4007aa:	00 00                	add    %al,(%rax)
  4007ac:	00 00                	add    %al,(%rax)
  4007ae:	00 00                	add    %al,(%rax)
  4007b0:	01 7a 52             	add    %edi,0x52(%rdx)
  4007b3:	00 01                	add    %al,(%rcx)
  4007b5:	78 10                	js     4007c7 <_IO_stdin_used+0xd7>
  4007b7:	01 1b                	add    %ebx,(%rbx)
  4007b9:	0c 07                	or     $0x7,%al
  4007bb:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  4007c1:	00 00                	add    %al,(%rax)
  4007c3:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4007c6:	00 00                	add    %al,(%rax)
  4007c8:	d8 fc                	fdivr  %st(4),%st
  4007ca:	ff                   	(bad)  
  4007cb:	ff 60 00             	jmpq   *0x0(%rax)
  4007ce:	00 00                	add    %al,(%rax)
  4007d0:	00 0e                	add    %cl,(%rsi)
  4007d2:	10 46 0e             	adc    %al,0xe(%rsi)
  4007d5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  4007d8:	0b 77 08             	or     0x8(%rdi),%esi
  4007db:	80 00 3f             	addb   $0x3f,(%rax)
  4007de:	1a 3b                	sbb    (%rbx),%bh
  4007e0:	2a 33                	sub    (%rbx),%dh
  4007e2:	24 22                	and    $0x22,%al
  4007e4:	00 00                	add    %al,(%rax)
  4007e6:	00 00                	add    %al,(%rax)
  4007e8:	1c 00                	sbb    $0x0,%al
  4007ea:	00 00                	add    %al,(%rax)
  4007ec:	44 00 00             	add    %r8b,(%rax)
  4007ef:	00 fd                	add    %bh,%ch
  4007f1:	fd                   	std    
  4007f2:	ff                   	(bad)  
  4007f3:	ff 44 00 00          	incl   0x0(%rax,%rax,1)
  4007f7:	00 00                	add    %al,(%rax)
  4007f9:	41 0e                	rex.B (bad) 
  4007fb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400801:	7f 0c                	jg     40080f <_IO_stdin_used+0x11f>
  400803:	07                   	(bad)  
  400804:	08 00                	or     %al,(%rax)
  400806:	00 00                	add    %al,(%rax)
  400808:	1c 00                	sbb    $0x0,%al
  40080a:	00 00                	add    %al,(%rax)
  40080c:	64 00 00             	add    %al,%fs:(%rax)
  40080f:	00 21                	add    %ah,(%rcx)
  400811:	fe                   	(bad)  
  400812:	ff                   	(bad)  
  400813:	ff 15 00 00 00 00    	callq  *0x0(%rip)        # 400819 <_IO_stdin_used+0x129>
  400819:	41 0e                	rex.B (bad) 
  40081b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400821:	50                   	push   %rax
  400822:	0c 07                	or     $0x7,%al
  400824:	08 00                	or     %al,(%rax)
  400826:	00 00                	add    %al,(%rax)
  400828:	1c 00                	sbb    $0x0,%al
  40082a:	00 00                	add    %al,(%rax)
  40082c:	84 00                	test   %al,(%rax)
  40082e:	00 00                	add    %al,(%rax)
  400830:	16                   	(bad)  
  400831:	fe                   	(bad)  
  400832:	ff                   	(bad)  
  400833:	ff 1f                	lcallq *(%rdi)
  400835:	00 00                	add    %al,(%rax)
  400837:	00 00                	add    %al,(%rax)
  400839:	41 0e                	rex.B (bad) 
  40083b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400841:	5a                   	pop    %rdx
  400842:	0c 07                	or     $0x7,%al
  400844:	08 00                	or     %al,(%rax)
  400846:	00 00                	add    %al,(%rax)
  400848:	44 00 00             	add    %r8b,(%rax)
  40084b:	00 a4 00 00 00 20 fe 	add    %ah,-0x1e00000(%rax,%rax,1)
  400852:	ff                   	(bad)  
  400853:	ff 65 00             	jmpq   *0x0(%rbp)
  400856:	00 00                	add    %al,(%rax)
  400858:	00 42 0e             	add    %al,0xe(%rdx)
  40085b:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
  400861:	8e 03                	mov    (%rbx),%es
  400863:	45 0e                	rex.RB (bad) 
  400865:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
  40086b:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff867016b9 <_end+0xffffffff86100661>
  400871:	06                   	(bad)  
  400872:	48 0e                	rex.W (bad) 
  400874:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  40087a:	6c                   	insb   (%dx),%es:(%rdi)
  40087b:	0e                   	(bad)  
  40087c:	38 41 0e             	cmp    %al,0xe(%rcx)
  40087f:	30 41 0e             	xor    %al,0xe(%rcx)
  400882:	28 42 0e             	sub    %al,0xe(%rdx)
  400885:	20 42 0e             	and    %al,0xe(%rdx)
  400888:	18 42 0e             	sbb    %al,0xe(%rdx)
  40088b:	10 42 0e             	adc    %al,0xe(%rdx)
  40088e:	08 00                	or     %al,(%rax)
  400890:	14 00                	adc    $0x0,%al
  400892:	00 00                	add    %al,(%rax)
  400894:	ec                   	in     (%dx),%al
  400895:	00 00                	add    %al,(%rax)
  400897:	00 48 fe             	add    %cl,-0x2(%rax)
  40089a:	ff                   	(bad)  
  40089b:	ff 02                	incl   (%rdx)
	...

00000000004008a8 <__FRAME_END__>:
  4008a8:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	c0 05 40 00 00 00 00 	rolb   $0x0,0x40(%rip)        # 600e57 <_DYNAMIC+0x2f>
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	a0                   	.byte 0xa0
  600e19:	05 40 00 00 00       	add    $0x40,%eax
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    %eax,(%rax)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	01 00                	add    %eax,(%rax)
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	0c 00                	or     $0x0,%al
  600e3a:	00 00                	add    %al,(%rax)
  600e3c:	00 00                	add    %al,(%rax)
  600e3e:	00 00                	add    %al,(%rax)
  600e40:	78 04                	js     600e46 <_DYNAMIC+0x1e>
  600e42:	40 00 00             	add    %al,(%rax)
  600e45:	00 00                	add    %al,(%rax)
  600e47:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 600e4d <_DYNAMIC+0x25>
  600e4d:	00 00                	add    %al,(%rax)
  600e4f:	00 e4                	add    %ah,%ah
  600e51:	06                   	(bad)  
  600e52:	40 00 00             	add    %al,(%rax)
  600e55:	00 00                	add    %al,(%rax)
  600e57:	00 19                	add    %bl,(%rcx)
  600e59:	00 00                	add    %al,(%rax)
  600e5b:	00 00                	add    %al,(%rax)
  600e5d:	00 00                	add    %al,(%rax)
  600e5f:	00 10                	add    %dl,(%rax)
  600e61:	0e                   	(bad)  
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 1b                	add    %bl,(%rbx)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 08                	add    %cl,(%rax)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 1a                	add    %bl,(%rdx)
  600e79:	00 00                	add    %al,(%rax)
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 18                	add    %bl,(%rax)
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    %al,(%rax)
  600e85:	00 00                	add    %al,(%rax)
  600e87:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	08 00                	or     %al,(%rax)
  600e92:	00 00                	add    %al,(%rax)
  600e94:	00 00                	add    %al,(%rax)
  600e96:	00 00                	add    %al,(%rax)
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    %al,(%rax)
  600eaf:	00 48 03             	add    %cl,0x3(%rax)
  600eb2:	40 00 00             	add    %al,(%rax)
  600eb5:	00 00                	add    %al,(%rax)
  600eb7:	00 06                	add    %al,(%rsi)
  600eb9:	00 00                	add    %al,(%rax)
  600ebb:	00 00                	add    %al,(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 b8 02 40 00 00    	add    %bh,0x4002(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 0a                	add    %cl,(%rdx)
  600ec9:	00 00                	add    %al,(%rax)
  600ecb:	00 00                	add    %al,(%rax)
  600ecd:	00 00                	add    %al,(%rax)
  600ecf:	00 61 00             	add    %ah,0x0(%rcx)
  600ed2:	00 00                	add    %al,(%rax)
  600ed4:	00 00                	add    %al,(%rax)
  600ed6:	00 00                	add    %al,(%rax)
  600ed8:	0b 00                	or     (%rax),%eax
  600eda:	00 00                	add    %al,(%rax)
  600edc:	00 00                	add    %al,(%rax)
  600ede:	00 00                	add    %al,(%rax)
  600ee0:	18 00                	sbb    %al,(%rax)
  600ee2:	00 00                	add    %al,(%rax)
  600ee4:	00 00                	add    %al,(%rax)
  600ee6:	00 00                	add    %al,(%rax)
  600ee8:	15 00 00 00 00       	adc    $0x0,%eax
	...
  600ef5:	00 00                	add    %al,(%rax)
  600ef7:	00 03                	add    %al,(%rbx)
	...
  600f01:	10 60 00             	adc    %ah,0x0(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	02 00                	add    (%rax),%al
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	78 00                	js     600f12 <_DYNAMIC+0xea>
  600f12:	00 00                	add    %al,(%rax)
  600f14:	00 00                	add    %al,(%rax)
  600f16:	00 00                	add    %al,(%rax)
  600f18:	14 00                	adc    $0x0,%al
  600f1a:	00 00                	add    %al,(%rax)
  600f1c:	00 00                	add    %al,(%rax)
  600f1e:	00 00                	add    %al,(%rax)
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 17                	add    %dl,(%rdi)
	...
  600f31:	04 40                	add    $0x40,%al
  600f33:	00 00                	add    %al,(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 07                	add    %al,(%rdi)
  600f39:	00 00                	add    %al,(%rax)
  600f3b:	00 00                	add    %al,(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 e8                	add    %ch,%al
  600f41:	03 40 00             	add    0x0(%rax),%eax
  600f44:	00 00                	add    %al,(%rax)
  600f46:	00 00                	add    %al,(%rax)
  600f48:	08 00                	or     %al,(%rax)
  600f4a:	00 00                	add    %al,(%rax)
  600f4c:	00 00                	add    %al,(%rax)
  600f4e:	00 00                	add    %al,(%rax)
  600f50:	18 00                	sbb    %al,(%rax)
  600f52:	00 00                	add    %al,(%rax)
  600f54:	00 00                	add    %al,(%rax)
  600f56:	00 00                	add    %al,(%rax)
  600f58:	09 00                	or     %eax,(%rax)
  600f5a:	00 00                	add    %al,(%rax)
  600f5c:	00 00                	add    %al,(%rax)
  600f5e:	00 00                	add    %al,(%rax)
  600f60:	18 00                	sbb    %al,(%rax)
  600f62:	00 00                	add    %al,(%rax)
  600f64:	00 00                	add    %al,(%rax)
  600f66:	00 00                	add    %al,(%rax)
  600f68:	fe                   	(bad)  
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 b8 03 40 00 00    	add    %bh,0x4003(%rax)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 ff                	add    %bh,%bh
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 01                	add    %al,(%rcx)
  600f81:	00 00                	add    %al,(%rax)
  600f83:	00 00                	add    %al,(%rax)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 f0                	add    %dh,%al
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f8d:	00 00                	add    %al,(%rax)
  600f8f:	00 aa 03 40 00 00    	add    %ch,0x4003(%rdx)
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 b6 04 40 00 00    	add    %dh,0x4004(%rsi)
  60101d:	00 00                	add    %al,(%rax)
  60101f:	00 c6                	add    %al,%dh
  601021:	04 40                	add    $0x40,%al
  601023:	00 00                	add    %al,(%rax)
  601025:	00 00                	add    %al,(%rax)
  601027:	00 d6                	add    %dl,%dh
  601029:	04 40                	add    $0x40,%al
  60102b:	00 00                	add    %al,(%rax)
  60102d:	00 00                	add    %al,(%rax)
  60102f:	00 e6                	add    %ah,%dh
  601031:	04 40                	add    $0x40,%al
  601033:	00 00                	add    %al,(%rax)
  601035:	00 00                	add    %al,(%rax)
  601037:	00 f6                	add    %dh,%dh
  601039:	04 40                	add    $0x40,%al
  60103b:	00 00                	add    %al,(%rax)
  60103d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601040 <__data_start>:
	...

0000000000601048 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601050 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x400400>
   a:	74 75                	je     81 <_init-0x4003f7>
   c:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
   f:	38 2e                	cmp    %ch,(%rsi)
  11:	34 2d                	xor    $0x2d,%al
  13:	32 75 62             	xor    0x62(%rbp),%dh
  16:	75 6e                	jne    86 <_init-0x4003f2>
  18:	74 75                	je     8f <_init-0x4003e9>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	34 2e                	xor    $0x2e,%al
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	33 29                	xor    (%rcx),%ebp
  24:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
  27:	38 2e                	cmp    %ch,(%rsi)
  29:	34 00                	xor    $0x0,%al

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	ed                   	in     (%dx),%eax
  11:	05 40 00 00 00       	add    $0x40,%eax
  16:	00 00                	add    %al,(%rax)
  18:	78 00                	js     1a <_init-0x40045e>
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	17                   	(bad)  
   1:	01 00                	add    %eax,(%rax)
   3:	00 04 00             	add    %al,(%rax,%rax,1)
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 01                	or     %al,(%rcx)
   c:	48 00 00             	rex.W add %al,(%rax)
   f:	00 01                	add    %al,(%rcx)
  11:	86 00                	xchg   %al,(%rax)
  13:	00 00                	add    %al,(%rax)
  15:	b8 00 00 00 ed       	mov    $0xed000000,%eax
  1a:	05 40 00 00 00       	add    $0x40,%eax
  1f:	00 00                	add    %al,(%rax)
  21:	78 00                	js     23 <_init-0x400455>
	...
  2b:	00 00                	add    %al,(%rax)
  2d:	02 08                	add    (%rax),%cl
  2f:	07                   	(bad)  
  30:	07                   	(bad)  
  31:	00 00                	add    %al,(%rax)
  33:	00 02                	add    %al,(%rdx)
  35:	01 08                	add    %ecx,(%rax)
  37:	19 00                	sbb    %eax,(%rax)
  39:	00 00                	add    %al,(%rax)
  3b:	02 02                	add    (%rdx),%al
  3d:	07                   	(bad)  
  3e:	35 00 00 00 02       	xor    $0x2000000,%eax
  43:	04 07                	add    $0x7,%al
  45:	0c 00                	or     $0x0,%al
  47:	00 00                	add    %al,(%rax)
  49:	02 01                	add    (%rcx),%al
  4b:	06                   	(bad)  
  4c:	1b 00                	sbb    (%rax),%eax
  4e:	00 00                	add    %al,(%rax)
  50:	02 02                	add    (%rdx),%al
  52:	05 a5 00 00 00       	add    $0xa5,%eax
  57:	03 04 05 69 6e 74 00 	add    0x746e69(,%rax,1),%eax
  5e:	02 08                	add    (%rax),%cl
  60:	05 2c 00 00 00       	add    $0x2c,%eax
  65:	02 08                	add    (%rax),%cl
  67:	07                   	(bad)  
  68:	af                   	scas   %es:(%rdi),%eax
  69:	00 00                	add    %al,(%rax)
  6b:	00 04 08             	add    %al,(%rax,%rcx,1)
  6e:	72 00                	jb     70 <_init-0x400408>
  70:	00 00                	add    %al,(%rax)
  72:	02 01                	add    (%rcx),%al
  74:	06                   	(bad)  
  75:	22 00                	and    (%rax),%al
  77:	00 00                	add    %al,(%rax)
  79:	05 72 00 00 00       	add    $0x72,%eax
  7e:	89 00                	mov    %eax,(%rax)
  80:	00 00                	add    %al,(%rax)
  82:	06                   	(bad)  
  83:	65 00 00             	add    %al,%gs:(%rax)
  86:	00 03                	add    %al,(%rbx)
  88:	00 04 08             	add    %al,(%rax,%rcx,1)
  8b:	8f 00                	popq   (%rax)
  8d:	00 00                	add    %al,(%rax)
  8f:	07                   	(bad)  
  90:	72 00                	jb     92 <_init-0x4003e6>
  92:	00 00                	add    %al,(%rax)
  94:	08 62 61             	or     %ah,0x61(%rdx)
  97:	72 00                	jb     99 <_init-0x4003df>
  99:	01 1e                	add    %ebx,(%rsi)
  9b:	ed                   	in     (%dx),%eax
  9c:	05 40 00 00 00       	add    $0x40,%eax
  a1:	00 00                	add    %al,(%rax)
  a3:	44 00 00             	add    %r8b,(%rax)
  a6:	00 00                	add    %al,(%rax)
  a8:	00 00                	add    %al,(%rax)
  aa:	00 01                	add    %al,(%rcx)
  ac:	9c                   	pushfq 
  ad:	e4 00                	in     $0x0,%al
  af:	00 00                	add    %al,(%rax)
  b1:	09 73 74             	or     %esi,0x74(%rbx)
  b4:	72 00                	jb     b6 <_init-0x4003c2>
  b6:	01 1e                	add    %ebx,(%rsi)
  b8:	6c                   	insb   (%dx),%es:(%rdi)
  b9:	00 00                	add    %al,(%rax)
  bb:	00 02                	add    %al,(%rdx)
  bd:	91                   	xchg   %eax,%ecx
  be:	58                   	pop    %rax
  bf:	0a 62 75             	or     0x75(%rdx),%ah
  c2:	66                   	data16
  c3:	00 01                	add    %al,(%rcx)
  c5:	1f                   	(bad)  
  c6:	79 00                	jns    c8 <_init-0x4003b0>
  c8:	00 00                	add    %al,(%rax)
  ca:	02 91 60 0b 00 00    	add    0xb60(%rcx),%dl
  d0:	00 00                	add    %al,(%rax)
  d2:	02 00                	add    (%rax),%al
  d4:	6c                   	insb   (%dx),%es:(%rdi)
  d5:	00 00                	add    %al,(%rax)
  d7:	00 0c 6c             	add    %cl,(%rsp,%rbp,2)
  da:	00 00                	add    %al,(%rax)
  dc:	00 0c 89             	add    %cl,(%rcx,%rcx,4)
  df:	00 00                	add    %al,(%rax)
  e1:	00 00                	add    %al,(%rax)
  e3:	00 0d 66 6f 6f 00    	add    %cl,0x6f6f66(%rip)        # 6f704f <_end+0xf5ff7>
  e9:	01 23                	add    %esp,(%rbx)
  eb:	31 06                	xor    %eax,(%rsi)
  ed:	40 00 00             	add    %al,(%rax)
  f0:	00 00                	add    %al,(%rax)
  f2:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # f8 <_init-0x400380>
  f8:	00 00                	add    %al,(%rax)
  fa:	00 01                	add    %al,(%rcx)
  fc:	9c                   	pushfq 
  fd:	0e                   	(bad)  
  fe:	27                   	(bad)  
  ff:	00 00                	add    %al,(%rax)
 101:	00 01                	add    %al,(%rcx)
 103:	27                   	(bad)  
 104:	57                   	push   %rdi
 105:	00 00                	add    %al,(%rax)
 107:	00 46 06             	add    %al,0x6(%rsi)
 10a:	40 00 00             	add    %al,(%rax)
 10d:	00 00                	add    %al,(%rax)
 10f:	00 1f                	add    %bl,(%rdi)
 111:	00 00                	add    %al,(%rax)
 113:	00 00                	add    %al,(%rax)
 115:	00 00                	add    %al,(%rax)
 117:	00 01                	add    %al,(%rcx)
 119:	9c                   	pushfq 
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%rcx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1316 <_end+0x2ab02be>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    (%rsi),%ecx
   b:	11 01                	adc    %eax,(%rcx)
   d:	12 07                	adc    (%rdi),%al
   f:	10 17                	adc    %dl,(%rdi)
  11:	00 00                	add    %al,(%rax)
  13:	02 24 00             	add    (%rax,%rax,1),%ah
  16:	0b 0b                	or     (%rbx),%ecx
  18:	3e 0b 03             	or     %ds:(%rbx),%eax
  1b:	0e                   	(bad)  
  1c:	00 00                	add    %al,(%rax)
  1e:	03 24 00             	add    (%rax,%rax,1),%esp
  21:	0b 0b                	or     (%rbx),%ecx
  23:	3e 0b 03             	or     %ds:(%rbx),%eax
  26:	08 00                	or     %al,(%rax)
  28:	00 04 0f             	add    %al,(%rdi,%rcx,1)
  2b:	00 0b                	add    %cl,(%rbx)
  2d:	0b 49 13             	or     0x13(%rcx),%ecx
  30:	00 00                	add    %al,(%rax)
  32:	05 01 01 49 13       	add    $0x13490101,%eax
  37:	01 13                	add    %edx,(%rbx)
  39:	00 00                	add    %al,(%rax)
  3b:	06                   	(bad)  
  3c:	21 00                	and    %eax,(%rax)
  3e:	49 13 2f             	adc    (%r15),%rbp
  41:	0b 00                	or     (%rax),%eax
  43:	00 07                	add    %al,(%rdi)
  45:	26 00 49 13          	add    %cl,%es:0x13(%rcx)
  49:	00 00                	add    %al,(%rax)
  4b:	08 2e                	or     %ch,(%rsi)
  4d:	01 3f                	add    %edi,(%rdi)
  4f:	19 03                	sbb    %eax,(%rbx)
  51:	08 3a                	or     %bh,(%rdx)
  53:	0b 3b                	or     (%rbx),%edi
  55:	0b 27                	or     (%rdi),%esp
  57:	19 11                	sbb    %edx,(%rcx)
  59:	01 12                	add    %edx,(%rdx)
  5b:	07                   	(bad)  
  5c:	40 18 96 42 19 01 13 	sbb    %dl,0x13011942(%rsi)
  63:	00 00                	add    %al,(%rax)
  65:	09 05 00 03 08 3a    	or     %eax,0x3a080300(%rip)        # 3a08036b <_end+0x39a7f313>
  6b:	0b 3b                	or     (%rbx),%edi
  6d:	0b 49 13             	or     0x13(%rcx),%ecx
  70:	02 18                	add    (%rax),%bl
  72:	00 00                	add    %al,(%rax)
  74:	0a 34 00             	or     (%rax,%rax,1),%dh
  77:	03 08                	add    (%rax),%ecx
  79:	3a 0b                	cmp    (%rbx),%cl
  7b:	3b 0b                	cmp    (%rbx),%ecx
  7d:	49 13 02             	adc    (%r10),%rax
  80:	18 00                	sbb    %al,(%rax)
  82:	00 0b                	add    %cl,(%rbx)
  84:	2e 01 3f             	add    %edi,%cs:(%rdi)
  87:	19 03                	sbb    %eax,(%rbx)
  89:	0e                   	(bad)  
  8a:	3a 0b                	cmp    (%rbx),%cl
  8c:	3b 0b                	cmp    (%rbx),%ecx
  8e:	27                   	(bad)  
  8f:	19 49 13             	sbb    %ecx,0x13(%rcx)
  92:	3c 19                	cmp    $0x19,%al
  94:	00 00                	add    %al,(%rax)
  96:	0c 05                	or     $0x5,%al
  98:	00 49 13             	add    %cl,0x13(%rcx)
  9b:	00 00                	add    %al,(%rax)
  9d:	0d 2e 00 3f 19       	or     $0x193f002e,%eax
  a2:	03 08                	add    (%rax),%ecx
  a4:	3a 0b                	cmp    (%rbx),%cl
  a6:	3b 0b                	cmp    (%rbx),%ecx
  a8:	11 01                	adc    %eax,(%rcx)
  aa:	12 07                	adc    (%rdi),%al
  ac:	40 18 96 42 19 00 00 	sbb    %dl,0x1942(%rsi)
  b3:	0e                   	(bad)  
  b4:	2e 00 3f             	add    %bh,%cs:(%rdi)
  b7:	19 03                	sbb    %eax,(%rbx)
  b9:	0e                   	(bad)  
  ba:	3a 0b                	cmp    (%rbx),%cl
  bc:	3b 0b                	cmp    (%rbx),%ecx
  be:	27                   	(bad)  
  bf:	19 49 13             	sbb    %ecx,0x13(%rcx)
  c2:	11 01                	adc    %eax,(%rcx)
  c4:	12 07                	adc    (%rdi),%al
  c6:	40 18 96 42 19 00 00 	sbb    %dl,0x1942(%rsi)
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	69 00 00 00 02 00    	imul   $0x20000,(%rax),%eax
   6:	43 00 00             	rex.XB add %al,(%r8)
   9:	00 01                	add    %al,(%rcx)
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	01 00                	add    %eax,(%rax)
  19:	00 01                	add    %al,(%rcx)
  1b:	00 70 72             	add    %dh,0x72(%rax)
  1e:	6f                   	outsl  %ds:(%rsi),(%dx)
  1f:	67 72 61             	addr32 jb 83 <_init-0x4003f5>
  22:	6d                   	insl   (%dx),%es:(%rdi)
  23:	2d 77 69 74 68       	sub    $0x68746977,%eax
  28:	2d 62 75 66 66       	sub    $0x66667562,%eax
  2d:	65                   	gs
  2e:	72 2d                	jb     5d <_init-0x40041b>
  30:	6f                   	outsl  %ds:(%rsi),(%dx)
  31:	76 65                	jbe    98 <_init-0x4003e0>
  33:	72 66                	jb     9b <_init-0x4003dd>
  35:	6c                   	insb   (%dx),%es:(%rdi)
  36:	6f                   	outsl  %ds:(%rsi),(%dx)
  37:	77 2e                	ja     67 <_init-0x400411>
  39:	63 00                	movslq (%rax),%eax
  3b:	00 00                	add    %al,(%rax)
  3d:	00 3c 62             	add    %bh,(%rdx,%riz,2)
  40:	75 69                	jne    ab <_init-0x4003cd>
  42:	6c                   	insb   (%dx),%es:(%rdi)
  43:	74 2d                	je     72 <_init-0x400406>
  45:	69 6e 3e 00 00 00 00 	imul   $0x0,0x3e(%rsi),%ebp
  4c:	00 00                	add    %al,(%rax)
  4e:	09 02                	or     %eax,(%rdx)
  50:	ed                   	in     (%dx),%eax
  51:	05 40 00 00 00       	add    $0x40,%eax
  56:	00 00                	add    %al,(%rax)
  58:	03 1d 01 ba e6 08    	add    0x8e6ba01(%rip),%ebx        # 8e6ba5f <_end+0x886aa07>
  5e:	2f                   	(bad)  
  5f:	08 5a 4b             	or     %bl,0x4b(%rdx)
  62:	e5 30                	in     $0x30,%eax
  64:	4b 9f                	rex.WXB lahf 
  66:	9f                   	lahf   
  67:	59                   	pop    %rcx
  68:	02 02                	add    (%rdx),%al
  6a:	00 01                	add    %al,(%rcx)
  6c:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	73 74                	jae    76 <_init-0x400402>
   2:	72 63                	jb     67 <_init-0x400411>
   4:	70 79                	jo     7f <_init-0x4003f9>
   6:	00 6c 6f 6e          	add    %ch,0x6e(%rdi,%rbp,2)
   a:	67 20 75 6e          	and    %dh,0x6e(%ebp)
   e:	73 69                	jae    79 <_init-0x4003ff>
  10:	67 6e                	outsb  %ds:(%esi),(%dx)
  12:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%rcx)
  17:	74 00                	je     19 <_init-0x40045f>
  19:	75 6e                	jne    89 <_init-0x4003ef>
  1b:	73 69                	jae    86 <_init-0x4003f2>
  1d:	67 6e                	outsb  %ds:(%esi),(%dx)
  1f:	65 64 20 63 68       	gs and %ah,%fs:%gs:0x68(%rbx)
  24:	61                   	(bad)  
  25:	72 00                	jb     27 <_init-0x400451>
  27:	6d                   	insl   (%dx),%es:(%rdi)
  28:	61                   	(bad)  
  29:	69 6e 00 6c 6f 6e 67 	imul   $0x676e6f6c,0x0(%rsi),%ebp
  30:	20 69 6e             	and    %ch,0x6e(%rcx)
  33:	74 00                	je     35 <_init-0x400443>
  35:	73 68                	jae    9f <_init-0x4003d9>
  37:	6f                   	outsl  %ds:(%rsi),(%dx)
  38:	72 74                	jb     ae <_init-0x4003ca>
  3a:	20 75 6e             	and    %dh,0x6e(%rbp)
  3d:	73 69                	jae    a8 <_init-0x4003d0>
  3f:	67 6e                	outsb  %ds:(%esi),(%dx)
  41:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%rcx)
  46:	74 00                	je     48 <_init-0x400430>
  48:	47                   	rex.RXB
  49:	4e 55                	rex.WRX push %rbp
  4b:	20 43 20             	and    %al,0x20(%rbx)
  4e:	34 2e                	xor    $0x2e,%al
  50:	38 2e                	cmp    %ch,(%rsi)
  52:	34 20                	xor    $0x20,%al
  54:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
  59:	65                   	gs
  5a:	3d 67 65 6e 65       	cmp    $0x656e6567,%eax
  5f:	72 69                	jb     ca <_init-0x4003ae>
  61:	63 20                	movslq (%rax),%esp
  63:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  68:	68 3d 78 38 36       	pushq  $0x3638783d
  6d:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
  72:	67 20 2d 66 73 74 61 	and    %ch,0x61747366(%eip)        # 617473df <_end+0x61146387>
  79:	63 6b 2d             	movslq 0x2d(%rbx),%ebp
  7c:	70 72                	jo     f0 <_init-0x400388>
  7e:	6f                   	outsl  %ds:(%rsi),(%dx)
  7f:	74 65                	je     e6 <_init-0x400392>
  81:	63 74 6f 72          	movslq 0x72(%rdi,%rbp,2),%esi
  85:	00 70 72             	add    %dh,0x72(%rax)
  88:	6f                   	outsl  %ds:(%rsi),(%dx)
  89:	67 72 61             	addr32 jb ed <_init-0x40038b>
  8c:	6d                   	insl   (%dx),%es:(%rdi)
  8d:	2d 77 69 74 68       	sub    $0x68746977,%eax
  92:	2d 62 75 66 66       	sub    $0x66667562,%eax
  97:	65                   	gs
  98:	72 2d                	jb     c7 <_init-0x4003b1>
  9a:	6f                   	outsl  %ds:(%rsi),(%dx)
  9b:	76 65                	jbe    102 <_init-0x400376>
  9d:	72 66                	jb     105 <_init-0x400373>
  9f:	6c                   	insb   (%dx),%es:(%rdi)
  a0:	6f                   	outsl  %ds:(%rsi),(%dx)
  a1:	77 2e                	ja     d1 <_init-0x4003a7>
  a3:	63 00                	movslq (%rax),%eax
  a5:	73 68                	jae    10f <_init-0x400369>
  a7:	6f                   	outsl  %ds:(%rsi),(%dx)
  a8:	72 74                	jb     11e <_init-0x40035a>
  aa:	20 69 6e             	and    %ch,0x6e(%rcx)
  ad:	74 00                	je     af <_init-0x4003c9>
  af:	73 69                	jae    11a <_init-0x40035e>
  b1:	7a 65                	jp     118 <_init-0x400360>
  b3:	74 79                	je     12e <_init-0x40034a>
  b5:	70 65                	jo     11c <_init-0x40035c>
  b7:	00 2f                	add    %ch,(%rdi)
  b9:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
  be:	70 62                	jo     122 <_init-0x400356>
  c0:	68 61 72 74 69       	pushq  $0x69747261
  c5:	2f                   	(bad)  
  c6:	43 2d 70 72 6f 67    	rex.XB sub $0x676f7270,%eax
  cc:	72 61                	jb     12f <_init-0x400349>
  ce:	6d                   	insl   (%dx),%es:(%rdi)
  cf:	6d                   	insl   (%dx),%es:(%rdi)
  d0:	69 6e 67 2d 65 78 65 	imul   $0x6578652d,0x67(%rsi),%ebp
  d7:	72 63                	jb     13c <_init-0x40033c>
  d9:	69 73 65 73 2f 67 64 	imul   $0x64672f73,0x65(%rbx),%esi
  e0:	62                   	.byte 0x62
	...
